import { Company, Log, MetaUser } from '../models/index.js';

export const fillInitDb = async () => {
  try {
    console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

    // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è localhost (development) –∏ justcreatedsite.ru (production)
    const defaultCompany = await Company.findOrCreate({
      where: { domain: 'localhost' },
      defaults: {
        name: 'Test Company',
        domain: 'localhost',
        description: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
        logo: '',
        status: 'active',
      },
    });

    // –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è production
    const productionCompany = await Company.findOrCreate({
      where: { domain: 'justcreatedsite.ru' },
      defaults: {
        name: 'Just Created Site',
        domain: 'justcreatedsite.ru',
        description: '–û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞',
        logo: '',
        status: 'active',
      },
    });

    console.log('‚úÖ –ë–∞–∑–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞:', defaultCompany[0].name);
    console.log('‚úÖ –ü—Ä–æ–¥–∞–∫—à–µ–Ω –∫–æ–º–ø–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞:', productionCompany[0].name);

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–æ–≥–∏ –¥–ª—è –±–∞–∑–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ (localhost)
    const testLogs = [
      {
        username: 'admin',
        success: true,
        ipAddress: '127.0.0.1',
        userAgent: 'Mozilla/5.0 (Test Browser)',
        companyId: defaultCompany[0].id,
      },
      {
        username: 'test_user',
        success: false,
        ipAddress: '192.168.1.100',
        userAgent: 'Mozilla/5.0 (Test Browser)',
        companyId: defaultCompany[0].id,
      },
    ];

    for (const logData of testLogs) {
      await Log.findOrCreate({
        where: {
          username: logData.username,
          companyId: logData.companyId,
          timestamp: new Date(),
        },
        defaults: logData,
      });
    }

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –ª–æ–≥–∏ —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è localhost');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–æ–≥–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω –∫–æ–º–ø–∞–Ω–∏–∏
    const productionLogs = [
      {
        username: 'admin',
        success: true,
        ipAddress: '127.0.0.1',
        userAgent: 'Mozilla/5.0 (Production Browser)',
        companyId: productionCompany[0].id,
      },
    ];

    for (const logData of productionLogs) {
      await Log.findOrCreate({
        where: {
          username: logData.username,
          companyId: logData.companyId,
          timestamp: new Date(),
        },
        defaults: logData,
      });
    }

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –ª–æ–≥–∏ —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è production');

    // –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∞–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
    await MetaUser.findOrCreate({
      where: { username: 'admin' },
      defaults: {
        username: 'admin',
        password: 'qwerty', // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–µ—à
      },
    });

    console.log('‚úÖ –ú–µ—Ç–∞–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');

    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
    console.log('');
    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
    console.log('- Development: Test Company (localhost)');
    console.log('- Production: Just Created Site (justcreatedsite.ru)');
    console.log('- –õ–æ–≥–∏–Ω –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–π: admin / qwerty123');
    console.log('- –õ–æ–≥–∏–Ω –¥–ª—è –º–µ—Ç–∞–∞–¥–º–∏–Ω–∫–∏: admin / qwerty');
    console.log('');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    throw error;
  }
};
